package noiseychannel;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;

import util.Tokenizer;

public class NoiseyChannel {
	
	private final String url = "query_logs.txt";
	
	private Tokenizer tokenizer;
	
	private QueryLogWords queryLogWords;
	private IncorrectQueryLogWords incorrectQueryLogWords;
	
	public NoiseyChannel(Tokenizer _tokenizer){
		this.tokenizer = _tokenizer;
		this.queryLogWords = new QueryLogWords();
		this.incorrectQueryLogWords = new IncorrectQueryLogWords();
	}
	
	public void setup(){
		File file = new File(url);
		try {
			BufferedReader reader = new BufferedReader(new FileReader(file));
			String line;
			while ((line = reader.readLine()) != null){
				String[] queryLog = line.split("\t");
				String sessionId = lineReader.
			}
		} 
		catch (FileNotFoundException e) {
			e.printStackTrace();
		}
		catch(IOException e){
			e.printStackTrace();
		}
	}
	
	public String getSuggestedCorrection(String e, ArrayList<String> S){
		// W*
		String suggestedCorrection = "";
		
		// score
		double score = 0.0;
		
		for(String W : S){
			double newScore = this.getPofEinW(e, W) * this.getPofW(W);
			if(newScore > score){
				score = newScore;
				suggestedCorrection = W;
			}
		}
		
		return suggestedCorrection;
	}
	
	private double getPofEinW(String e, String W){
		return 0.0;
	}
	
	private double getPofW(String W){
		return 0.0;
	}
}
